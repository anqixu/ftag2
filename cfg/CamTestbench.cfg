#!/usr/bin/env python
PACKAGE = "ftag2"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("sobelThreshHigh", int_t, 0, "Upper threshold for Sobel operator's hysteresis thresholding", 100, 0, 255)
gen.add("sobelThreshLow", int_t, 0, "Lower threshold for Sobel operator's hysteresis thresholding", 30, 0, 255)

blur_width_enum = gen.enum([
  gen.const("3", int_t, 3, "3"),
  gen.const("5", int_t, 5, "5")],
  "sobelBlurWidth")
gen.add("sobelBlurWidth", int_t, 0, "Gaussian blur width prior to running Sobel operator", 3, edit_method=blur_width_enum)
  
gen.add("lineAngleMargin", double_t, 0, "Half of maximum angular range for grouping edgels based on their gradient direction", 20.0, 0.01, 360.0) # * degree
gen.add("lineMinEdgelsCC", int_t, 0, "Minimum number of edgels in each connected component, for filtering out small components", 50, 0, 200)
gen.add("lineMinEdgelsSeg", int_t, 0, "Minimum number of edgels in each line segment, for filtering out short segments", 15, 0, 200)

gen.add("quadMinWidth", int_t, 0, "Minimum width of a FTag2 marker", 15, 15, 50)
gen.add("quadMinAngleIntercept", double_t, 0, "Minimum angle between 2 line segments for grouping, for filtering out sharp corners", 30.0, 0.0, 90.0) # * degree
gen.add("quadMinEndptDist", double_t, 0, "Minimum distance between 2 line segments for grouping", 4.0, 0.0, 20.0)
gen.add("quadMaxStripAvgDiff", double_t, 0, "Maximum strip (row / col) grayscale average difference, for trimming the white sides of extracted tag quads", 15.0, 0.0, 30.0)

gen.add("imRotateDeg", double_t, 0, "imRotateDeg", 0.0, 0.0, 360.0)

gen.add("numberOfParticles", int_t, 0, "Number of particles", 5, 1, 1000)
gen.add("position_std", double_t, 0, "Position STD", 0.05, 0.01, 5.0)
gen.add("orientation_std", double_t, 0, "Orientation STD", 0.05, 0.01, 0.3)
gen.add("position_noise_std", double_t, 0, "Position noise STD", 0.05, 0.0, 0.1)
gen.add("orientation_noise_std", double_t, 0, "Orientation noise STD", 0.2, 0.0, 0.3)

#gen.add("maxQuadsToScan", int_t, 0, "Maximum number of largest quads to scan for tags", 10, 1, 100)

exit(gen.generate(PACKAGE, "ftag2", "CamTestbench"))
